---
import Layout from "@layouts/Layout.astro";
import SmallTitle from "@components/SmallTitle.astro";
import CategoryCard from "@components/CategoryCard.astro";

export interface Props {
  projectsCategory: string;
  title: string;
}
const { projectsCategory, title } = Astro.props;

const projects = await Astro.glob("../pages/work/*.mdx");
const filteredProjects = projects
  .filter(
    (project) => project.frontmatter.category.indexOf(projectsCategory) >= 0
  )
  .sort((a, b) => {
    const aPriority = a.frontmatter.priority;
    const bPriority = b.frontmatter.priority;
    if (aPriority > bPriority) {
      return 1;
    }
    if (aPriority < bPriority) {
      return -1;
    }
    return 0;
  });
---

<Layout title={title}>
  <SmallTitle title={title} />
  <ul role="list" class="link-card-grid">
    {
      filteredProjects.map((project) => (
        <CategoryCard
          href={"/work/" + project.frontmatter.slug}
          title={project.frontmatter.title}
          img={`/src/images/${project.frontmatter.slug}/feature.jpg`}
          colour={project.frontmatter.customColour}
        />
      ))
    }
  </ul>
</Layout>

<style>
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .link-card-grid {
    display: grid;
    grid-column: 1 / span all;
    /* grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr)); */
    /* gap: 1rem; */
    padding: 2rem;
    row-gap: 2rem;
  }
  @media (min-width: 666px) {
    .link-card-grid {
      grid-template-columns: 1fr 1fr;
      column-gap: 2rem;
    }
  }
</style>
