---
import '../css/global.css'
import '../css/animations.css'
import PageTransition from '@components/PageTransition.astro'
import Header from '../components/Header.astro'
import MetaTags from '@components/MetaTags.astro'
import Footer from '../components/Footer.astro'
export interface Props {
    title: string
    customColour: string
    categories: Array<string>
}

const { title, customColour, categories } = Astro.props

// Build a nicely formatted string of project categories
let categoriesString = ''
categories.forEach((category, index) => {
    if (index === 0)
        categoriesString = categoriesString + category.toLowerCase()
    else if (index === categories.length - 1)
        categoriesString = categoriesString + ' and ' + category.toLowerCase()
    else categoriesString = categoriesString + ', ' + category.toLowerCase()
})
// Build the meta description
const metaDescription = `A ${categoriesString} project for ${title}`
---

<!doctype html>
<html lang="en">
    <head>
        <PageTransition />
        <MetaTags description={metaDescription} />
        <title>{title}</title>
    </head>
    <body id="body" class="transition">
        <Header />
        <main id="main">
            <slot />
        </main>
        <Footer />
        <style define:vars={{ customColour }}>
            /* Redefine colour custom properties inside the layout to
theme the whole page with the customColour prop */
            :root,
            body {
                /* Replacing the accent colour custom property */
                --accent: var(--customColour);
                --accentClone: color-mix(in lab, var(--accent), white 0.001%);
                /* Defining a relative complimentary colour using color-mix in cylindrical colour space  with longer hue option. 
*/
                --secondary: color-mix(
                    in oklch longer hue,
                    var(--accent) 7%,
                    var(--accentClone)
                );
                --tertiary: color-mix(
                    in oklch longer hue,
                    var(--accent) 50%,
                    var(--accentClone)
                );
                /* Replacing surface custom properties with tints of new colours. */
                --surface-1: color-mix(in oklab, var(--accent) 6%, #fff);
                --surface-2: color-mix(in oklab, var(--secondary) 6%, #fff);
                --surface-3: color-mix(in oklab, var(--secondary) 10%, #fff);
                --surface-4: color-mix(in oklab, var(--secondary) 25%, #fff);
                --surface-5: color-mix(in oklab, var(--surface-4) 30%, #ccc);
                --tertiaryTint: color-mix(in oklab, var(--tertiary) 15%, #fff);
                --borderColour: var(--surface-4);
                --borderAccentColour: var(--borderColour);
                --linkColour: color-mix(in oklab, var(--tertiary) 90%, #fff);
                --base: color-mix(in oklab, var(--secondary), black 66%);
            }
        </style>
    </body>
</html>
