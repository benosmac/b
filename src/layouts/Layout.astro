---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import '../css/global.css'
export interface Props {
    title: string
}

const { title } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,700;1,300;1,700&display=swap"
            rel="stylesheet"
        />

        <title>{title}</title>
    </head>
    <body id="body" class="transition">
        <Header />
        <main id="main">
            <slot />
        </main>
        <Footer />
    </body>
</html>
<script>
    // Handle Page in/out transitions
    const links = document.querySelectorAll('a')
    const bodyEl = document.getElementById('body')
    const hostName = window.location.host
    links.forEach((link) => {
        if (link.hostname === hostName) {
            link.addEventListener('click', (event) => {
                event.preventDefault()
                bodyEl?.classList.add('transition')
                setTimeout(() => {
                    window.location.href = link.href
                }, 333)
            })
        }
    })
    document.addEventListener('DOMContentLoaded', (event) => {
        bodyEl?.classList.remove('transition')
    })
</script>
<style is:global>
    /* :root {
        --loadingAnimationSpeed: 500ms;
    } */
    #main,
    #footer {
        transform: translateY(0);
        opacity: 1;
        filter: blur(0);
        transition: all 0.33s ease;
    }
    .transition #main,
    .transition #footer {
        transform: translateY(2vh);
        opacity: 0;
        filter: blur(10px);
    }

    /* .transition #logo > path {
        animation-name: logoLoading;
        animation-duration: var(--loadingAnimationSpeed);
        animation-timing-function: ease;
        animation-iteration-count: infinite;
        animation-direction: alternate;
        animation-fill-mode: forwards;
    }

    .transition #logo > path:nth-child(1) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 1);
    }
    .transition #logo > path:nth-child(2) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 2);
    }
    .transition #logo > path:nth-child(3) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 3);
    }
    .transition #logo > path:nth-child(4) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 4);
    }
    .transition #logo > path:nth-child(5) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 5);
    }
    .transition #logo > path:nth-child(6) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 6);
    }
    .transition #logo > path:nth-child(7) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 7);
    }
    .transition #logo > path:nth-child(8) {
        animation-delay: calc(var(--loadingAnimationSpeed) * 8);
    }
    @keyframes logoLoading {
        0% {
            fill: hsl(162.51 100% 19%);
        }
        1% {
            fill: #fff;
        }

        99% {
            fill: #fff;
        }
        100% {
            fill: hsl(162.51 100% 19%);
        }
    } */
</style>
