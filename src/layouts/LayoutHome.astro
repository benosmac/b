---
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import '../css/global.css'
export interface Props {
    title: string
}

const { title } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,300;0,700;1,300;1,700&display=swap"
            rel="stylesheet"
        />

        <title>{title}</title>
    </head>
    <body id="body" class="home home-is-loading">
        <Header />
        <main id="main">
            <slot />
        </main>
        <Footer />
    </body>
</html>
<script>
    // Handle Page in/out transitions
    const links = document.querySelectorAll('a')
    const bodyEl = document.getElementById('body')
    links.forEach((link) => {
        link.addEventListener('click', (event) => {
            event.preventDefault()
            bodyEl?.classList.add('transition')
            setTimeout(() => {
                window.location.href = link.href
            }, 333)
        })
    })
    function setPageLoaded() {
        bodyEl?.classList.remove('home-is-loading')
        bodyEl?.classList.add('home-is-loaded')
    }
    window.addEventListener('load', (event) => {
        setTimeout(setPageLoaded, 1000)
    })
</script>
<style is:global>
    @keyframes showVerticalGrid {
        from {
            transform: scaleY(0);
            transform-origin: top;
        }
        to {
            transform: scaleY(1);
            transform-origin: top;
        }
    }
    @keyframes hideVerticalGrid {
        from {
            transform: scaleY(1);
            transform-origin: bottom;
        }
        to {
            transform: scaleY(0);
            transform-origin: bottom;
        }
    }
    @keyframes showHorizontalGrid {
        from {
            transform: scaleX(0);
            transform-origin: left;
        }
        to {
            transform: scaleX(1);
            transform-origin: left;
        }
    }
    @keyframes hideHorizontalGrid {
        from {
            transform: scaleX(1);
            transform-origin: right;
        }
        to {
            transform: scaleX(0);
            transform-origin: right;
        }
    }
    @keyframes slideInFromTop {
        0% {
            transform: translateY(-100%);
        }
        50% {
            transform: translateY(-100%);
        }
        100% {
            transform: translateY(0);
        }
    }
    @keyframes scaleFromTop {
        0% {
            transform: scaleY(0%);
            transform-origin: top;
        }
        50% {
            transform: scaleY(0%);
            transform-origin: top;
        }
        100% {
            transform: scaleY(100%);
            transform-origin: top;
        }
    }
    @keyframes fadeIn {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }
    /* Handle transition when navigating off page */
    #main {
        transition: all 0.333s ease;
    }
    .transition #main {
        transform: translateY(2vh);
        opacity: 0;
        filter: blur(10px);
    }

    /* Draw vertical and horizontal grid lines using pseudo elements */

    #main {
        overflow: hidden;
    }

    /* Vertical */
    .home #main::before,
    .home #main::after,
    .project-card::after,
    .project-card::before {
        content: '';
        position: absolute;
        top: 0;
        width: 1px;
        background: var(--accent);
        z-index: 1;
    }
    .home #main::before {
        bottom: 0;
        left: var(--gapSize);
    }
    .home #main::after {
        bottom: 0;
        right: var(--gapSize);
    }
    .project-card::after {
        right: 0;
        bottom: var(--negativeGapSize);
    }
    .project-card::before {
        left: 0;
        bottom: var(--negativeGapSize);
    }

    /* Horizontal */
    .home .intro::before,
    .project-card .grid-line::after,
    .project-card .grid-line::before {
        content: '';
        height: 1px;
        background: var(--accent);
        position: absolute;
        z-index: 1;
    }
    .home .intro::before {
        width: 100vw;
        top: 0;
        left: 0;
    }
    .project-card .grid-line::after {
        bottom: 0;
        left: var(--negativeGapSize);
        right: var(--negativeGapSize);
    }
    .project-card .grid-line::before {
        top: 0;
        left: var(--negativeGapSize);
        right: var(--negativeGapSize);
    }
    .project-card {
        position: relative;
    }

    /* Animate grid lines */
    /* Vertical */
    .home-is-loading #main::before,
    .home-is-loading #main::after,
    .home-is-loading .project-card::after,
    .home-is-loading .project-card::before {
        animation-name: showVerticalGrid;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 0.5s;
    }
    .home-is-loaded #main::before,
    .home-is-loaded #main::after,
    .home-is-loaded .project-card::after,
    .home-is-loaded .project-card::before {
        animation-name: hideVerticalGrid;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 0.5s;
        animation-delay: 0.5s;
        animation-fill-mode: forwards;
    }

    /* Horizontal */
    .home-is-loading .intro::before,
    .home-is-loading .intro::after,
    .home-is-loading .project-card .grid-line::before,
    .home-is-loading .project-card .grid-line::after {
        animation-name: showHorizontalGrid;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 0.5s;
    }
    .home-is-loaded .intro::before,
    .home-is-loaded .intro::after,
    .home-is-loaded .project-card .grid-line::before,
    .home-is-loaded .project-card .grid-line::after {
        animation-name: hideHorizontalGrid;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 0.5s;
        animation-delay: 0.5s;
        animation-fill-mode: forwards;
    }

    /* Animate content blocks */
    /* First hide the content within the blocks */
    .home-is-loading nav,
    .home-is-loading .logo {
        opacity: 0;
    }
    .work-header h2,
    .work-header .button,
    .project-card img,
    .project-card .title-wrapper {
        opacity: 0;
    }
    .intro h2 {
        color: transparent;
        transition: all 0.5s ease 0.25s;
    }
    .work-header {
        transition: all 0.5s ease 0.25s;
    }

    /* Reveal the content blocks */
    header {
        animation-name: scaleFromTop;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 1s;
        animation-fill-mode: forwards;
    }
    .project-card a {
        animation-name: scaleFromTop;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 1s;
        animation-fill-mode: forwards;
    }
    .intro h2,
    .work-header {
        animation: scaleFromTop;
        animation-timing-function: var(--defaultTiming);
        animation-duration: 1s;
        background: var(--surface-4);
    }
    /* Show the content within blocks */
    .home-is-loaded .intro h2 {
        color: var(--base);
        /* Remove the background colour */
        background: none;
    }
    .home-is-loaded .work-header {
        background: none;
    }
    .home-is-loaded
        :where(
            .work-header h2,
            .work-header .button,
            .project-card img,
            .project-card .title-wrapper,
            nav,
            .logo
        ) {
        animation: fadeIn;
        animation-duration: 0.5s;
        animation-timing-function: var(--defaultTiming);
        animation-fill-mode: forwards;
        animation-delay: 0.25s;
    }
    nav,
    .logo {
        opacity: 1;
        transition: opacity 0.5s ease 0.25s;
    }
</style>
