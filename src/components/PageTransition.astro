---
import { ViewTransitions } from 'astro:transitions'
import '../css/page-transition.css'
---

<ViewTransitions fallback="none" />
<script>
    // Handle page transitions

    //View Transitions not supported
    if (!document.startViewTransition) {
        document.addEventListener('DOMContentLoaded', (event) => {
            initialLoad(false)
        })
    } else {
        //View Transitions supported
        document.addEventListener('DOMContentLoaded', (event) => {
            initialLoad(true)
        })
        document.addEventListener('astro:beforeload', setRootClasses)
        document.addEventListener('astro:load', endTransition)
    }
    function setRootClasses() {
        if (sessionStorage.getItem('vtSupported') === 'true') {
            const rootEl = document.documentElement
            rootEl.classList.add('vt')
            rootEl?.classList.add('home-is-loaded')
        }
    }
    function endTransition() {
        const bodyEl = document.getElementById('body')
        bodyEl?.classList.remove('transition')
    }
    function timeout(ms = 1000) {
        return new Promise((resolve) => setTimeout(resolve, ms))
    }
    async function initialLoad(vt = true) {
        const rootEl = document.documentElement
        function loaded(vt: boolean) {
            endTransition()
            sessionStorage.setItem('initialLoadDone', 'true')
            if (vt) {
                sessionStorage.setItem('vtSupported', 'true')
                rootEl.classList.add('vt')
            } else {
                sessionStorage.setItem('vtSupported', 'false')
            }
        }
        if (document.location.pathname === '/') {
            await timeout(1000)
            rootEl?.classList.remove('home-is-loading')
            rootEl?.classList.add('home-is-loaded')
            await timeout(1000)
            loaded(vt)
        } else {
            // sessionStorage.setItem('initialLoadDone', 'true')
            loaded(vt)
        }
    }
</script>
