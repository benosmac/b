---
import { Image } from '@astrojs/image/components'
export interface Props {
    title: string
    href: string
    img: string
    colour: string
    categories: Array<string>
}

const { title, href, img, colour, categories } = Astro.props
const featureImageUrl: string = `url(${img})`
---

<li class="project-card">
    <a href={href}>
        <Image src={img} alt={title} format="webp" width="800" height="800" />
        <div class="title-wrapper">
            <div class="content">
                <h2>
                    {title}
                </h2>
                <ul>
                    {categories.map((category) => <li>{category}</li>)}
                </ul>
            </div>
        </div>
    </a>
    <!-- Filthy boy needed to draw horizontal lines in homepage grid animation. -->
    <span class="grid-line"></span>
</li>
<style define:vars={{ colour, featureImageUrl }}>
    .project-card {
        list-style: none;
        display: flex;
    }

    .project-card a {
        position: relative;
        display: flex;
        aspect-ratio: 1;
        align-self: flex-start;
        text-decoration: none;
        line-height: 1.4;
        padding: 0;
        color: #000;
        overflow: hidden;
        background-color: var(--surface-1);
    }
    .project-card img {
        align-self: center;
        max-width: 100%;
        height: auto;
    }
    .title-wrapper {
        display: flex;
        position: absolute;
        overflow: hidden;
        width: 100%;
        min-height: 25%;
        align-self: flex-end;
        align-items: center;
        background-color: var(--colour);
        margin: 0;
        padding: 2rem;
        font-size: 1rem;
    }
    @media (hover: hover) {
        .title-wrapper {
            transform: translateY(101%);
            transition: all 0.25s var(--outQuadratic);
        }
        .project-card h2 {
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.5s var(--outQuadratic) 0.25s;
        }
        .project-card li {
            opacity: 0;
            transform: translateY(10px);
            transition: all 0.5s var(--outQuadratic);
        }
        .project-card li:nth-child(1) {
            transition-delay: 0.5s;
        }
        .project-card li:nth-child(2) {
            transition-delay: 0.6s;
        }
        .project-card li:nth-child(3) {
            transition-delay: 0.7s;
        }
        .project-card li:nth-child(4) {
            transition-delay: 0.8s;
        }
        .project-card:is(:hover, :focus-within) h2,
        .project-card:is(:hover, :focus-within) li {
            opacity: 1;
            transform: translateY(0);
        }
        .project-card:is(:hover, :focus-within) .title-wrapper {
            transform: translateY(0);
        }
        /* .project-card:is(:hover, :focus-within) img {
            filter: saturate(0.9);
        } */
    }
    .content {
        display: flex;
        flex-grow: 1;
        flex-direction: column;
        align-self: stretch;
    }
    .project-card h2 {
        font-size: 1.125rem;
        margin: 0 0 1rem 0;
        flex-grow: 1;
    }
    .project-card ul {
        list-style: none;
        font-size: 0.875rem;
        padding: 0;
    }
    .project-card li {
        display: inline-block;
        padding: 0.25rem 0.5rem;
        margin: 0.5rem 0.5rem 0 0;
        background: rgba(255, 255, 255, 0.25);
    }
</style>
