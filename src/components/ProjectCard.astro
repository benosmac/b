---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'
export interface Props {
    title: string
    href: string
    img: ImageMetadata
    loading?: 'lazy' | 'eager'
    customColour: string
    categories: Array<string>
    slug: string
}

const {
    title,
    href,
    img,
    loading = 'lazy',
    customColour,
    categories,
    slug,
} = Astro.props
const transitionName = 'project-image-' + slug
---

<li
    class="project-card"
    transition:animate="morph"
    transition:name={transitionName}
>
    <a href={href}>
        <Image src={img} format="webp" alt={title} width="800" height="800" />
        <div class="title-wrapper">
            <div class="content">
                <h2>
                    {title}
                </h2>
                <ul>
                    {categories.map((category) => <li>{category}</li>)}
                </ul>
            </div>
        </div>
    </a>
    <!-- Filthy boy needed to draw horizontal lines in homepage grid animation. -->
    <span class="grid-line"></span>
</li>
<style define:vars={{ customColour }}>
    /* Redefine colour custom properties inside the component to theme it with the customColour prop. Scoped to .title-wrapper so it doesn't affect grid lines and placeholder background colours */
    .title-wrapper {
        /* Replacing the accent colour custom property */
        --accent: var(--customColour);
        /* Defining a relative complimentary colour using color-mix in cylindrical colour space  with longer hue option. 
        */
        --secondary: color-mix(
            in oklch longer hue,
            var(--accent),
            var(--accent)
        );
        /* Replacing surface custom properties with tints of new colours. */
        --surface-1: color-mix(in oklab, var(--accent) 6%, #fff);
        --surface-2: color-mix(in oklab, var(--secondary) 6%, #fff);
        --surface-3: color-mix(in oklab, var(--secondary) 2%, #fff);
        --surface-4: color-mix(in oklab, var(--accent) 25%, #fff);
    }
    .project-card {
        list-style: none;
        display: flex;
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
        & h2 {
            color: var(--accent);
            font-size: 1rem;
            line-height: 1;
            margin: 0 0 var(--halfGap) 0;
            flex-grow: 1;
            text-wrap: balance;
        }
        & ul {
            display: flex;
            flex-wrap: wrap;
            gap: var(--quarterGap);
            list-style: none;
            font-size: 0.75rem;
            padding: 0;
        }
        & li {
            color: var(--accent);
            line-height: 1.4;
            padding: calc(var(--quarterGap) / 2) var(--quarterGap);
            background: var(--surface-1);
        }
        & a {
            position: relative;
            display: flex;
            aspect-ratio: 1;
            align-self: flex-start;
            text-decoration: none;
            padding: 0;
            color: #000;
            overflow: hidden;
        }
        & img {
            object-fit: cover;
            object-position: 0 -3rem;
            height: auto;
            max-width: 100%;
        }
    }
    .title-wrapper {
        display: flex;
        position: absolute;
        overflow: hidden;
        width: 100%;
        min-height: 25%;
        align-self: flex-end;
        align-items: center;
        background-color: var(--surface-4);
        margin: 0;
        padding: var(--gapSize);
        font-size: 1rem;
    }
    .content {
        display: flex;
        flex-grow: 1;
        flex-direction: column;
        align-self: stretch;
    }
    /* Scope hover styles*/
    @media (hover: hover) {
        .title-wrapper {
            transform: translateY(101%);
            transition: all 0.25s var(--outQuadratic);
        }
        .project-card {
            & h2 {
                font-size: 1.125rem;
                opacity: 0;
                transform: translateY(10px);
                transition: all 0.5s var(--outQuadratic) 0.25s;
            }
            & li {
                opacity: 0;
                transform: translateY(10px);
                transition: all 0.5s var(--outQuadratic);
                &:nth-child(1) {
                    transition-delay: 0.5s;
                }
                &:nth-child(2) {
                    transition-delay: 0.6s;
                }
                &:nth-child(3) {
                    transition-delay: 0.7s;
                }
                &:nth-child(4) {
                    transition-delay: 0.8s;
                }
            }
            & img {
                object-position: center;
            }
            &:hover,
            &:focus-within {
                & h2,
                & li {
                    opacity: 1;
                    transform: translateY(0);
                }
                .title-wrapper {
                    transform: translateY(0);
                }
            }
        }
    }
</style>
