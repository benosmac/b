---
import Layout from '../layouts/LayoutHome.astro'
import Button from '@components/Button.astro'
import { Icon } from 'astro-icon'
import ProjectCard from '@components/ProjectCard.astro'
import type { CollectionEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { ImportImage } from 'src/lib/importImages'
import ArticleCard from '@components/ArticleCard.astro'

const featuredProjects: Array<CollectionEntry<'projects'>> =
    await getCollection('projects', ({ data }) => {
        return data.isFeatured === true
    })
const sortedProjects = featuredProjects.sort((a, b) => {
    const aPriority = a.data.priority
    const bPriority = b.data.priority
    if (aPriority > bPriority) {
        return 1
    }
    if (aPriority < bPriority) {
        return -1
    }
    return 0
})
const articles: Array<CollectionEntry<'articles'>> = await getCollection(
    'articles',
    ({ data }) => {
        return data.published === true
    }
)
const sortedArticles = articles
    .sort((a, b) => {
        const aDate = Date.parse(a.data.date)
        const bDate = Date.parse(b.data.date)
        if (aDate < bDate) {
            return 1
        }
        if (aDate > bDate) {
            return -1
        }
        return 0
    })
    .slice(0, 2)
---

<Layout title="Bengamin Osborn-Macpherson - Design & Development">
    <section class="intro">
        <h1>
            <span
                >Designer & front-end developer <wbr />from Melbourne, Australia</span
            >
        </h1>
        <p>
            I help businesses grow by leveraging design and technology to build
            brands, products and experiences that they are proud of.
        </p>
    </section>

    <section class="section projects">
        <div class="section-header">
            <h2>Projects</h2>
            <Button
                text="View all"
                url="/projects"
                hasIcon={true}
                iconPosition="right"
                size="borderless"
            >
                <Icon name="mdi:arrow-right" slot="icon" aria-hidden="true" />
            </Button>
        </div>
        <ul role="list" class="project-card-grid">
            {
                sortedProjects.map(async (project) => {
                    const img = await ImportImage(project.slug, 'feature')

                    return (
                        <ProjectCard
                            href={'/projects/' + project.slug}
                            title={project.data.title}
                            img={img}
                            loading="eager"
                            customColour={project.data.customColour}
                            categories={project.data.categories}
                            slug={project.slug}
                        />
                    )
                })
            }
        </ul>
    </section>
    <section class="section articles">
        <div class="section-header">
            <h2>Articles</h2>
            <Button
                text="View all"
                url="/articles"
                hasIcon={true}
                iconPosition="right"
                size="borderless"
            >
                <Icon name="mdi:arrow-right" slot="icon" aria-hidden="true" />
            </Button>
        </div>
        <ul role="list" class="article-card-grid">
            {
                sortedArticles.map(async (article) => {
                    const img = await ImportImage(
                        'articles',
                        article.data.image
                    )
                    return (
                        <ArticleCard
                            href={'/articles/' + article.slug}
                            title={article.data.title}
                            img={img}
                            tags={article.data.tags}
                            date={article.data.date}
                            description={article.data.description}
                            slug={article.slug}
                        />
                    )
                })
            }
        </ul>
    </section>
</Layout>

<style is:inline>
    .intro {
        position: relative;
        grid-column: 1 / span 6;
        padding: calc(var(--gapSize) * 2) var(--gapSize);
        & h1 {
            font-weight: 700;
            font-size: calc(var(--headingMultiplier) * 1.5);
            /* margin-bottom: calc(var(--gapSize) / 4); */
            text-wrap: balance;
            max-width: 24ch;
        }
        & p {
            font-size: calc(var(--midMultiplier) * 1);
            max-width: 66ch;
            text-wrap: balance;
        }
        & span {
            display: inline-block;
        }
        & :global(.button) {
            padding-left: 0;
            font-weight: 200;
        }
    }
    .section {
        display: flex;
        flex-direction: column;
        grid-column: 1 / span 6;
        padding: 0 var(--gapSize) var(--gapSize) var(--gapSize);
    }
    @media (min-width: 777px) {
        .projects {
            grid-column: 1 / span 3;
        }
        .articles {
            grid-column: 4 / span 3;
        }
    }

    @media (min-width: 999px) {
        .projects {
            grid-column: 1 / span 4;
        }
        .articles {
            grid-column: 5 / span 2;
        }
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        border-bottom: var(--border);
        margin-bottom: var(--gapSize);
        padding-bottom: calc(var(--gapSize) / 2);
        & h2 {
            font-size: calc(var(--headingMultiplier) * 1.25);
            font-weight: var(--bodyWeight);
            margin: 0;
        }
    }
    .article-card-grid {
        position: relative;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        column-gap: var(--gapSize);
        row-gap: var(--gapSize);
        padding: 0;
        margin-bottom: var(--gapSize);
        margin-top: 0;
    }
    .project-card-grid {
        position: relative;
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
        column-gap: var(--gapSize);
        row-gap: var(--gapSize);
        padding: 0;
        margin-bottom: var(--gapSize);
        margin-top: 0;
        /* @media (min-width: 1000px) {
            grid-template-columns: repeat(3, minmax(300px, 1fr));
        } */
    }
    @media (min-width: 777px) {
        .project-card-grid {
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        }
    }
</style>
